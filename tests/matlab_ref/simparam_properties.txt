self.uwg.simTime.dt,            # uwg time simulation time step
self.uwg.simTime.timeForcing,   # weather data timestep
self.uwg.simTime.month,
self.uwg.simTime.day,
self.uwg.simTime.days,
self.uwg.simTime.timePrint,     # weather data timestep
self.uwg.simTime.timeDay,       # how many times weather senses in a day
self.uwg.simTime.timeSim,       # how many steps in weather data simulation
self.uwg.simTime.timeMax,       # total seconds in simulation days
self.uwg.simTime.nt,            # total number of timesteps for uwg simuation
self.uwg.simTime.julian,
self.uwg.simTime.timeInitial,   # sensor data in epw for intial time based on julian day & timesteps
self.uwg.simTime.timeFinal,     # sensor data in epw for final time based on julian day & timesteps
self.uwg.simTime.secDay,        # current seconds in day
self.uwg.simTime.hourDay
//
dt
timeForcing
month
day
days
timePrint
timeDay
timeSim
timeMax
nt
inobis
julian
timeInitial
timeFinal
secDay
hourDay
//
fileID = fopen('..\\UWG_Python\\tests\\matlab_ref\\matlab_simparam\\matlab_ref_simparam.txt','w');
format long;
fprintf(fileID, ".16f\n", obj.dt);
fprintf(fileID, ".16f\n", obj.timeForcing);
fprintf(fileID, ".16f\n", obj.month);
fprintf(fileID, ".16f\n", obj.day);
fprintf(fileID, ".16f\n", obj.days);
fprintf(fileID, ".16f\n", obj.timePrint);
fprintf(fileID, ".16f\n", obj.timeDay);
fprintf(fileID, ".16f\n", obj.timeSim);
fprintf(fileID, ".16f\n", obj.timeMax);
fprintf(fileID, ".16f\n", obj.nt);
fprintf(fileID, ".16f\n", obj.julian);
fprintf(fileID, ".16f\n", obj.timeInitial);
fprintf(fileID, ".16f\n", obj.timeFinal);
fprintf(fileID, ".16f\n", obj.secDay);
fprintf(fileID, ".16f\n", obj.hourDay);
fclose(fileID);